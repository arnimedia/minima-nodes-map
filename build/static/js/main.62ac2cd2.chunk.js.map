{"version":3,"sources":["images/minima_logo.svg","components/MinimaGraph.js","components/Modal.js","components/useModal.js","Map.js","App.js","index.js"],"names":["module","exports","MinimaGraph","data","type","mode","marker","color","layout","plot_bgcolor","paper_bgcolor","hoverlabel","bgcolor","bordercolor","font","family","size","displayModeBar","config","responsive","style","width","height","Modal","isShowing","hide","ReactDOM","createPortal","Fragment","className","aria-modal","aria-hidden","tabIndex","role","data-dismiss","aria-label","onClick","document","body","useModal","useState","setIsShowing","toggle","mapboxgl","accessToken","Map","mapContainerRef","useRef","map","setMap","showContentOne","setShowContentOne","allnodes","loadData","setloadData","isMobile","SetIsMobile","isMap","window","innerWidth","setWidth","useEffect","handleWindowResize","addEventListener","removeEventListener","city","countryArray","features","forEach","i","properties","id","push","country","countsa","Object","values","reduce","a","c","name","count","sort","ac","flyToCountry","location","locations","flyTo","center","geo","zoom","container","current","on","addSource","addLayer","source","paint","daynodes","setLayoutProperty","remove","SideBar","setMargin","setStyle","margin","src","LogoDark2x","alt","length","toLocaleString","item","index","key","SideToggle","checked","for","ref","App","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.62ac2cd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/minima_logo.32d7aeb1.svg\";","import React, {useEffect} from 'react';\nimport Plot from 'react-plotly.js';\n\nconst MinimaGraph = () => {\n\n  return (\n    <Plot\n      data={[\n        {\n          \"x\":[\"2021-07-05\",\"2021-07-12\",\"2021-07-19\",\"2021-07-26\",\"2021-08-02\",\"2021-08-09\",\"2021-08-16\",\"2021-08-23\",\"2021-08-30\",\"2021-09-06\",\"2021-09-13\",\"2021-09-20\",\"2021-09-27\",\"2021-10-04\",\"2021-10-11\",\"2021-10-18\",\"2021-10-25\",\"2021-11-01\",\"2021-11-08\",\"2021-11-15\",\"2021-11-22\",\"2021-11-29\",\"2021-12-06\",\"2021-12-13\",\"2021-12-20\",\"2021-12-27\",\"2022-01-03\",\"2022-01-10\",\"2022-01-17\",\"2022-01-24\",\"2022-01-31\",\"2022-02-07\",\"2022-02-08\",\"2022-02-09\",\"2022-02-10\",\"2022-02-11\",\"2022-02-12\",\"2022-02-13\",\"2022-02-14\",\"2022-02-15\",\"2022-02-16\",\"2022-02-17\",\"2022-02-18\",\"2022-02-19\",\"2022-02-20\",\"2022-02-21\",\"2022-02-22\",\"2022-02-23\",\"2022-02-24\",\"2022-02-25\",\"2022-02-26\",\"2022-02-27\",\"2022-02-28\",\"2022-03-01\",\"2022-03-02\",\"2022-03-03\",\"2022-03-04\",\"2022-03-05\",\"2022-03-06\",\"2022-03-07\",\"2022-03-08\",\"2022-03-09\",\"2022-03-10\",\"2022-03-11\",\"2022-03-12\",\"2022-03-13\",\"2022-03-14\",\"2022-03-15\",\"2022-03-16\",\"2022-03-17\",\"2022-03-18\",\"2022-03-19\",\"2022-03-20\",\"2022-03-21\",\"2022-03-22\",\"2022-03-23\",\"2022-03-24\",\"2022-03-25\",\"2022-03-26\",\"2022-03-27\",\"2022-03-28\",\"2022-03-29\",\"2022-03-30\",\"2022-03-31\",\"2022-04-01\",\"2022-04-02\",\"2022-04-03\",\"2022-04-04\",\"2022-04-05\",\"2022-04-06\",\"2022-04-07\",\"2022-04-08\",\"2022-04-09\",\"2022-04-10\",\"2022-04-11\",\"2022-04-12\",\"2022-04-13\",\"2022-04-14\",\"2022-04-15\",\"2022-04-16\",\"2022-04-17\",\"2022-04-18\",\"2022-04-19\",\"2022-04-20\",\"2022-04-21\",\"2022-04-22\",\"2022-04-23\",\"2022-04-24\",\"2022-04-25\",\"2022-04-26\",\"2022-04-27\",\"2022-04-28\",\"2022-04-29\",\"2022-04-30\",\"2022-05-01\",\"2022-05-02\",\"2022-05-03\",\"2022-05-04\",\"2022-05-05\",\"2022-05-06\",\"2022-05-07\",\"2022-05-08\",\"2022-05-09\",\"2022-05-10\",\"2022-05-11\",\"2022-05-12\",\"2022-05-13\",\"2022-05-14\",\"2022-05-15\",\"2022-05-16\",\"2022-05-17\",\"2022-05-18\",\"2022-05-19\"],\n          \"y\":[1078.0,1269.0,1395.0,1605.0,1527.0,1161.0,1359.0,1617.0,2267.0,1812.0,2235.0,3531.0,4869.0,4566.0,4437.0,5912.0,5365.0,6115.0,7188.0,7807.0,8356.0,8029.0,8322.0,8403.0,8601.0,10015.0,11141.0,11942.0,13317.0,14172.0,15018.0,15911.0,16092.0,16238.0,16352.0,16696.0,16981.0,17110.0,17266.0,17295.0,17311.0,17432.0,17532.0,17686.0,17771.0,18239.0,18295.0,19487.0,20951.0,21955.0,22620.0,23262.0,23047.0,23794.0,23720.0,23667.0,23781.0,24065.0,24075.0,24095.0,25486.0,25396.0,25307.0,25127.0,25350.0,25399.0,25424.0,25448.0,27658.0,26478.0,27212.0,27734.0,28048.0,29384.0,29798.0,30169.0,31098.0,31645.0,31982.0,32513.0,31862.0,32898.0,33498.0,34522.0,36128.0,37007.0,37364.0,39201.0,39413.0,41057.0,42019.0,42034.0,42679.0,42911.0,44209.0,45765.0,47073.0,48007.0,49066.0,49488.0,50617.0,53005.0,55379.0,57317.0,58678.0,60466.0,62273.0,64872.0,67998.0,70512.0,73080.0,74118.0,75822.0,75737.0,75369.0,75990.0,78071.0,79520.0,81179.0,81742.0,81183.0,79924.0,80383.0,81045.0,81756.0,82087.0,81771.0,80682.0,79701.0,79900.0,82045.0,87244.0,85008.0],\n          type: 'scatter',\n          mode: 'lines',\n          marker: {color: '#317AFF'},\n        },\n      ]}\n      layout={{\n          plot_bgcolor:'black',\n          paper_bgcolor:'black',\n          hoverlabel: {\n          bgcolor: 'transparent',\n          bordercolor: 'transparent',\n          font: {\n            color: 'white',\n            family: 'Manrope',\n            size: 12\n          }},\n          // title: 'Minima Nodes',\n          font: {\n            color: 'white',\n            family: 'Manrope',\n            size: 12\n          },\n          displayModeBar: false\n      }} \n      config={{responsive:'true'}}\n      style={{ width: \"440px\", height: \"280px\" }}\n    />\n  );\n};\n\n\nexport default MinimaGraph;\n            ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MinimaGraph from './MinimaGraph';\n\nconst Modal = ({ isShowing, hide }) => isShowing ? ReactDOM.createPortal(\n  <React.Fragment>\n    <div className=\"modal-overlay\"/>\n    <div className=\"modal-wrapper\" aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\n      <div className=\"modal\">\n        <div className=\"modal-header\">\n          <button type=\"button\" className=\"modal-close-button\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={hide}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <MinimaGraph />\n      </div>\n    </div>\n  </React.Fragment>, document.body\n) : null;\n\nexport default Modal;","import { useState } from 'react';\n\nconst useModal = () => {\n  const [isShowing, setIsShowing] = useState(false);\n\n  function toggle() {\n    setIsShowing(!isShowing);\n  }\n\n  return {\n    isShowing,\n    toggle,\n  }\n};\n\nexport default useModal;","import React, { useRef, useEffect, useState, useMemo } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MinimaGraph from './components/MinimaGraph';\nimport Modal from './components/Modal';\nimport useModal from './components/useModal';\n// import SideSlide from './components/SideSlide';\nimport './Map.css';\nimport allnodes from './allnodes.json';\nimport daynodes from './daynodes.json';\nimport LogoDark2x from \"../src/images/minima_logo.svg\";\n\nmapboxgl.accessToken =\n  'pk.eyJ1IjoicGV0ZXJob3dlbGwiLCJhIjoiY2wycmQwenB3MWtlbzNibHhkYm9pZWExMSJ9.IQXGTRlZFUS8mApIZWp53Q';\n\n\n\nconst Map = () => {\n\n  const mapContainerRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [showContentOne, setShowContentOne] = useState(true)\n  const [loadData, setloadData] = useState(allnodes)\n  const {isShowing, toggle} = useModal();\n  const [isMobile, SetIsMobile] = useState(false);\n  const [isMap, SetIsMap] = useState('mapbox://styles/peterhowell/cl3c0qjmk000p15nt81wjjog4');\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const breakpoint = 620;\n\n  useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth)\n    window.addEventListener(\"resize\", handleWindowResize);\n\n    // Return a function from the effect that removes the event listener\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n\n  const city = loadData;\n  const countryArray = [];\n  \n  city.features.forEach(function (city, i) {\n    city.properties.id = i;\n    countryArray.push(city.properties.country);\n  });\n  \n  const countsa = Object.values(countryArray.reduce((a, c) => {\n    (a[c] || (a[c] = {name: c, count: 0})).count += 1;\n    return a;\n  }, {})).sort(({count: ac}, {count: bc}) => bc - ac);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n\n    // 'mapbox://styles/peterhowell/cl3blrshb000415rvql540uql',\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,  \n      style: isMap,\n      center: [5, 34],\n      zoom: 1.5\n    });\n\n    map.on('load', () => {\n      map.addSource('allnodes', {\n        type: 'geojson',\n        data: allnodes,\n      });\n\n      map.addLayer({\n        id: 'allnodes',\n        type: 'circle',\n        /* Add a GeoJSON source containing place coordinates and information. */\n        source: 'allnodes',\n        paint: {\n          'circle-color': '#FF9682',\n          \"circle-opacity\": {\n            \"stops\": [\n                [5, 0.4],\n                [10, 1]\n            ]\n          },\n          'circle-blur': 4,\n          \"circle-radius\": {\n            \"stops\": [\n                [5, 5],\n                [10, 2]\n            ]\n          }\n        }\n      });\n\n      map.addLayer({\n        id: 'allnodes1',\n        type: 'circle',\n        source: 'allnodes',\n        paint: {\n          'circle-color': '#FF512F',\n          'circle-opacity': 0.4,\n          'circle-blur': {\n            \"stops\": [\n              [5, 5],\n              [10, 0]\n            ]\n          },\n          \"circle-radius\": {\n            \"stops\": [\n                [5, 3],\n                [10, 6]\n            ]\n        }\n        }\n      });\n\n      map.addLayer({\n        id: 'allnodes2',\n        type: 'circle',\n        source: 'allnodes',\n        paint: {\n          'circle-color': '#FF512F',\n          'circle-opacity': 1,\n          'circle-blur': {\n            \"stops\": [\n              [5, 1],\n              [10, 0]\n            ]\n          },\n          \"circle-radius\": {\n            \"stops\": [\n                [5, 2],\n                [10, 6]\n            ]\n        }\n        }\n      });\n\n      map.addSource('daynodes', {\n        type: 'geojson',\n        data: daynodes,\n      });\n\n      map.addLayer({\n        id: 'daynodes',\n        type: 'circle',\n        source: 'daynodes',\n        paint: {\n          'circle-color': '#FF512F',\n          'circle-opacity': 0.5,\n          'circle-radius': 3,\n        }\n      });\n\n      map.setLayoutProperty('daynodes', 'visibility', 'none');\n      setMap(map);\n    });\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, []);\n    \n  function handleContentOne(){\n    setloadData(allnodes);\n    setShowContentOne(true)\n    map.setLayoutProperty('allnodes', 'visibility', 'visible');\n    map.setLayoutProperty('allnodes1', 'visibility', 'visible');\n    map.setLayoutProperty('allnodes2', 'visibility', 'visible');\n    map.setLayoutProperty('daynodes', 'visibility', 'none');\n    flyToCountry();\n}\n\nfunction handleContentTwo(){\n    setloadData(daynodes);\n    setShowContentOne(false);\n    map.setLayoutProperty('allnodes', 'visibility', 'none');\n    map.setLayoutProperty('allnodes1', 'visibility', 'none');\n    map.setLayoutProperty('allnodes2', 'visibility', 'none');\n    map.setLayoutProperty('daynodes', 'visibility', 'visible');\n    flyToCountry();\n}\n\nfunction flyToCountry(location) {\n  if(width < breakpoint){SetIsMobile(true)};\n  const locations = {'Belarus': { 'zoom': 5, 'geo':[25.7299058,53.6991569]},'Netherlands': { 'zoom': 6, 'geo':[3.0350857,52.2093393]},'South Korea': { 'zoom': 6, 'geo':[125.3994289,36.5784802]},'Japan': { 'zoom': 5, 'geo':[135.501274,38.977426]}, 'Germany': { 'zoom': 5, 'geo':[10.0375085,51.3553436]}, 'Russia': { 'zoom': 3, 'geo':[56.833332,60.583332]}, 'China':  {'zoom': 4, 'geo': [114.2665,30.5856]}, 'United Kingdom': {'zoom': 5, 'geo': [-7.49553,54.8176015]}, 'United States': {'zoom': 4, 'geo': [-104.991531,39.742043]}, 'Ukraine': {'zoom': 5, 'geo': [32.0621,49.4285]}};\n  map.flyTo({\n    center: locations[location] == null ? [5, 34] : locations[location].geo,\n    zoom: locations[location] == null ? 1.5 : locations[location].zoom\n  });\n}\n\n// function ChangeStyle1() {\n//   map.setStyle('mapbox://styles/peterhowell/cl3bjae17006z15ny82lzs6qi');\n\n//   map.addSource('allnodes', {\n//     type: 'geojson',\n//     data: allnodes,\n//   });\n// }\n\n// function ChangeStyle() {\n//   map.setStyle('mapbox://styles/peterhowell/cl3c0qjmk000p15nt81wjjog4');\n  \n// }\n\n\n  const SideBar = () => {\n    const [margin, setMargin] = useState(\"\");\n    const setStyle = (margin) => {\n      setMargin(margin);\n    };\n\n    return (\n      <>\n          <div className=\"slide-side\">\n\n                  {/* <input id=\"satellite-v9\" onClick={ChangeStyle1} type=\"radio\" name=\"rtoggle\" />\n                  <label for=\"satellite-v9\">Monochrome</label>\n                  <input id=\"light-v10\" onClick={ChangeStyle}type=\"radio\" name=\"rtoggle\" />\n                  <label for=\"light-v10\">Terrain</label> */}\n\n\n              <div className=\"logo\">\n                  <img className=\"logo-dark logo-img\" src={LogoDark2x} alt=\"logo\" />\n                  <span>Minima <br />Node count</span>\n              </div>\n              <div className='tabs'>\n                {/* <Slider margin={margin} /> */}\n                <div onClick={() => {setStyle('move-left'); handleContentOne();}} className={`tab-one ${showContentOne ? \"active\" : \"\"}`}>All</div>\n                <div onClick={() => {setStyle('move-right'); handleContentTwo();}} className={`tab-two ${showContentOne ? \"\" : \"active\"}`}>Last 24Hrs</div>\n              </div>\n              <div className=\"info-box\">\n              {showContentOne ? \"Total Global Nodes\" : \"24 Hour Global Nodes\"}\n                <span>{city.features.length.toLocaleString()}</span> \n              </div>\n              <div className={`minima-graph ${showContentOne ? \"\" : \"none\"}`}>\n                <div className=\"graph-zoom\" onClick={toggle}>&#43;</div>\n                <MinimaGraph />\n                <Modal\n                  isShowing={isShowing}\n                  hide={toggle}\n                />\n              </div>\n              <div className='results'>\n                {countsa.map(((item, index)=>(\n                  <div className='results-item' key={index} onClick={()=>{flyToCountry(item.name)}}>\n                      <div className='results-order'>{index + 1}.</div>\n                      <div className='results-copy'>{item.name}<span>{item.count.toLocaleString()} Node{item.count === 1 ? \"\" : \"s\"}</span></div>\n                  </div>\n                  ))\n                )}\n              </div>\n          </div>\n      </>\n    );\n  };\n\n  const Slider = ({ margin }) => {\n    return (\n      <div margin={margin} className={`slider ${margin}`}></div>\n    );\n  };\n\n  const SideToggle = () => {\n    return (\n      <>\n        <input id=\"menu1Toggle\" type=\"checkbox\" onClick={() => SetIsMobile(!isMobile)} checked={isMobile} /><label className=\"menu-toggle menu-1-toggle\" for=\"menu1Toggle\"><span className=\"menu-label\">&#60;</span><span className=\"close-label\">&#62;</span></label>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <div ref={mapContainerRef} className='map-container' />\n      <SideToggle />\n      <SideBar />\n    </div>\n  );\n};\n\nexport default Map;","import React from 'react';\nimport Map from './Map';\n\nfunction App() {\n  return (\n    <div>\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}